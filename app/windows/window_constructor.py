from io import BytesIO

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from app.assets.preview_info import INFO
from app.models.database import User as DB_User
from app.models.window import Window


async def get_auth_window() -> Window:
    photo_id = 'images/auth'
    caption = '–î–∞–Ω–Ω—ã–π –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –º—É–∑–µ—è <b>¬´–†–æ—Å—Å–∏—è - –ú–æ—è –∏—Å—Ç–æ—Ä–∏—è¬ª</b>.'

    return Window(photo_id=photo_id, caption=caption, markup=None)


async def get_start_window() -> Window:
    photo_id = 'images/start'
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='üåü –ù–∞—á–∞—Ç—å', callback_data='album')],
            [InlineKeyboardButton(text='‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ', callback_data='about')]
        ]
    )
    return Window(photo_id=photo_id, caption=None, markup=markup)


async def get_about_window() -> Window:
    photo_id = 'images/about'
    caption = (
        '–í—ã—Å—Ç–∞–≤–æ—á–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –ø–æ—Å–≤—è—â—ë–Ω –∑–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–º—É —ç—Ç–∞–ø—É –í—Ç–æ—Ä–æ–π –º–∏—Ä–æ–≤–æ–π –≤–æ–π–Ω—ã –∏ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –æ –≥–µ—Ä–æ–∏—á–µ—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö '
        '—Å–æ–≤–µ—Ç—Å–∫–∏—Ö –≤–æ–π—Å–∫ –Ω–∞ –î–∞–ª—å–Ω–µ–º –í–æ—Å—Ç–æ–∫–µ –≤ –∞–≤–≥—É—Å—Ç–µ‚Äì—Å–µ–Ω—Ç—è–±—Ä–µ 1945 –≥–æ–¥–∞.\n\n'
        '–≠–∫—Å–ø–æ–∑–∏—Ü–∏—è –ø—Ä–∏—É—Ä–æ—á–µ–Ω–∞ –∫ 80-–ª–µ—Ç–∏—é –ü–æ–±–µ–¥—ã –≤ –í–µ–ª–∏–∫–æ–π –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–æ–π–Ω–µ –∏ 130-–ª–µ—Ç–∏—é —Å–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è –º–∞—Ä—à–∞–ª–∞ '
        '–°–æ–≤–µ—Ç—Å–∫–æ–≥–æ –°–æ—é–∑–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ú–∏—Ö–∞–π–ª–æ–≤–∏—á–∞ –í–∞—Å–∏–ª–µ–≤—Å–∫–æ–≥–æ ‚Äî –æ–¥–Ω–æ–≥–æ –∏–∑ –≥–ª–∞–≤–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–æ–≤ –ø–æ–±–µ–¥–æ–Ω–æ—Å–Ω–æ–π –ú–∞–Ω—å—á–∂—É—Ä—Å–∫–æ–π '
        '–æ–ø–µ—Ä–∞—Ü–∏–∏. –ü—Ä–æ–µ–∫—Ç —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç —Ö–æ–¥ —ç—Ç–æ–π –º–∞—Å—à—Ç–∞–±–Ω–æ–π –Ω–∞—Å—Ç—É–ø–∞—Ç–µ–ª—å–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏, –æ—Ö–≤–∞—Ç–∏–≤—à–µ–π —Ñ—Ä–æ–Ω—Ç –¥–ª–∏–Ω–æ–π –±–æ–ª–µ–µ –ø—è—Ç–∏ '
        '—Ç—ã—Å—è—á –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤.\n\n'
        '–ü–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –∂–¥—ë—Ç –Ω–∞—Å—ã—â–µ–Ω–Ω–∞—è —ç–∫—Å–ø–æ–∑–∏—Ü–∏—è: —Ä–µ–¥–∫–∏–µ –∞—Ä—Ö–∏–≤–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –ø–æ–¥–ª–∏–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, –≤–æ–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã, '
        '—Å—Ö–µ–º—ã –±–æ–µ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ –∞–≥–∏—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–ª–∞–∫–∞—Ç—ã. –≠—Ç–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –ø—Ä–æ—Å–ª–µ–¥–∏—Ç—å —Å—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ '
        '–æ–ø–µ—Ä–∞—Ü–∏–∏, –µ—ë —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è –∏ —Ä–µ—à–∞—é—â–∏–π –≤–∫–ª–∞–¥ —Å–æ–≤–µ—Ç—Å–∫–æ–π –∞—Ä–º–∏–∏ –≤ –æ–∫–æ–Ω—á–∞–Ω–∏–µ –í—Ç–æ—Ä–æ–π –º–∏—Ä–æ–≤–æ–π –≤–æ–π–Ω—ã.'
    )
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data='start')]
        ]
    )

    return Window(photo_id=photo_id, caption=caption, markup=markup)


async def get_album_window(template_id: int) -> Window:
    photo_id = 'images/album'
    caption = (
        '–ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è –í–∞—Å <b>–∞–ª—å–±–æ–º</b> —Å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏.\n\n'
        '<b>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–æ–º–µ—Ä</b> –∞—Ä—Ö–∏–≤–Ω–æ–≥–æ —Ñ–æ—Ç–æ —á—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∏–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ.'
    )

    builder = InlineKeyboardBuilder()

    for index in range(1, 12):
        template_status = ' ‚Ä¢ ' if index == template_id else ''
        builder.button(text=f'{template_status}‚Ññ {index}{template_status}', callback_data=f'template_{index}')

    builder.adjust(3)
    builder.row(InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data='start'))
    markup = builder.as_markup()

    return Window(photo_id=photo_id, caption=caption,  markup=markup)


async def get_template_window(template_id: int):
    photo_id = f'previews/template_{template_id}'
    caption = INFO.get(f'template_{template_id}')
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='üéû –°—Ç–∞—Ç—å —á–∞—Å—Ç—å—é —Ñ–æ—Ç–æ', callback_data='user_photo')],
            [InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data='album')]
        ]
    )

    return Window(photo_id=photo_id, caption=caption, markup=markup)


async def get_user_photo_window(template_id: int, gender: str, last_photo_id: str):
    gender_emoji = {'male': 'üßîüèª‚Äç‚ôÇÔ∏è', 'female': 'üë±üèº‚Äç‚ôÄÔ∏è'}
    photo_id = f'previews/template_{template_id}'
    caption = (
        '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—ë —Ñ–æ—Ç–æ, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤–∞—Å –≤ –∏—Å—Ç–æ—Ä–∏—é.\n\n'
        '<b>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ñ–æ—Ç–æ:</b>\n'
        '- –¢–æ–ª—å–∫–æ <b>–æ–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫</b> –Ω–∞ —Ñ–æ—Ç–æ;\n'
        '- –õ–∏—Ü–æ <b>–æ—Ç—á—ë—Ç–ª–∏–≤–æ –≤–∏–¥–Ω–æ</b>, –≤—ã –¥–æ–ª–∂–Ω—ã —Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∫–∞–º–µ—Ä—É;\n'
        '- –õ–∏—Ü–æ <b>–ø–æ–ª–Ω–æ—Å—Ç—å—é</b> –≤ –∫–∞–¥—Ä–µ;\n'
        '- –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ <b>–∫–∞–∫ —Ñ–æ—Ç–æ</b>, –∞ –Ω–µ –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç.\n\n'
        '–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–∏—Ç—Å—è –ª—É—á—à–µ, –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã–≤–∞—Ç—å –≤–∞—à–µ –ª–∏—Ü–æ (–æ—á–∫–∏, –º–∞—Å–∫–∞, —à–∞—Ä—Ñ –∏ —Ç.–¥.).'
    )
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=f'–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª: {gender_emoji[gender]}',callback_data='user_photo_gender')],
            [InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data=f'template_{template_id}')]
        ]
    )

    if last_photo_id:
        new_button = [InlineKeyboardButton(text='üñº –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ',callback_data='user_photo_previous')]
        markup.inline_keyboard.insert(1, new_button)

    return Window(photo_id=photo_id, caption=caption, markup=markup)


async def get_confirmation_window(db_user: DB_User) -> Window:
    gender = {'male': '–ú—É–∂—á–∏–Ω–∞', 'female': '–ñ–µ–Ω—â–∏–Ω–∞'}
    caption = (
        '–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å—ë –≤–µ—Ä–Ω–æ –∏ —á—Ç–æ –í–∞—à–µ —Ñ–æ—Ç–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º, –ø–æ—Å–ª–µ —á–µ–≥–æ –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ.'
        f'\n\n<b>–ê—Ä—Ö–∏–≤–Ω–æ–µ —Ñ–æ—Ç–æ: </b><code>‚Ññ{db_user.template_id}</code>\n'
        f'<b>–ü–æ–ª:</b> <code>{gender[db_user.gender]}</code>\n\n'
        f'<i>* –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ –Ω–∞ —ç—Ç–æ–º —à–∞–≥–µ, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–≤ –µ–≥–æ –≤ —á–∞—Ç.</i>')
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=f'ü™Ñ –°–æ–∑–¥–∞—Ç—å', callback_data='generate')],
            [InlineKeyboardButton(text='üö´ –û—Ç–º–µ–Ω–∞', callback_data=f'user_photo')]
        ]
    )

    return Window(photo_id=db_user.last_photo_id, caption=caption, markup=markup)


async def get_generation_window() -> Window:
    photo_id = 'images/generation'
    caption = ('–ú—ã —É–∂–µ —Å–æ–∑–¥–∞—ë–º –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.\n\n'
               '–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –ª–∏–±–æ –¥–æ–∂–¥–∞—Ç—å—Å—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–¥–µ—Å—å.\n\n'
               f'üîî –ú—ã –ø—Ä–∏—à–ª—ë–º –≤–∞–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.')
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=f'üè† –ù–∞ –ì–ª–∞–≤–Ω—É—é', callback_data='start')]
        ]
    )

    return Window(photo_id=photo_id, caption=caption, markup=markup)


async def get_generation_error_window() -> Window:
    photo_id = 'images/generation_error'
    caption = ('–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ —Å–æ–∑–¥–∞—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π,'
               '–ª–∏–±–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.\n\n'
               '–ú—ã —É–∂–µ —Ä–∞–∑–±–∏—Ä–∞–µ–º—Å—è –≤ –ø—Ä–æ–±–ª–µ–º–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∂–µ, –ª–∏–±–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ.')
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=f'‚úñÔ∏è –ó–∞–∫—Ä—ã—Ç—å', callback_data='close_window')]
        ]
    )

    return Window(photo_id=photo_id, caption=caption, markup=markup)


async def get_generation_success_window(result_image: BytesIO) -> Window:
    photo_id = result_image
    caption = None
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=f'‚úñÔ∏è –ó–∞–∫—Ä—ã—Ç—å', callback_data='close_window')]
        ]
    )

    return Window(photo_id=photo_id, caption=caption, markup=markup)

